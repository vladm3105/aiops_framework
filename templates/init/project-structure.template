# Project Structure Template
# AI Agent Development Framework v3.7
# 
# This template creates the complete project structure for a new framework project.
# Usage: Copy this structure to create a new AI-first project.

## Required Directory Structure
```
{{ PROJECT_NAME }}/
├── .github/
│   ├── workflows/
│   │   ├── ai-code-review.yml           # AI code quality workflow
│   │   ├── ai-testing.yml               # AI testing automation
│   │   ├── ai-build-deploy.yml          # AI deployment workflow
│   │   └── documentation-quality.yml    # Documentation validation
│   ├── environments/
│   │   ├── development.yml              # Development environment config
│   │   ├── staging.yml                  # Staging environment config
│   │   └── production.yml               # Production environment config
│   └── copilot-instructions.md          # GitHub Copilot configuration
├── docs/
│   ├── adr/                             # Architecture Decision Records
│   │   └── README.md                    # ADR guidelines
│   ├── ears/                            # EARS requirements
│   │   └── README.md                    # EARS guidelines
│   ├── bdd/                             # Behavior-Driven Development
│   │   └── README.md                    # BDD guidelines
│   ├── specs/                           # Technical specifications
│   │   └── README.md                    # Specifications guidelines
│   ├── prd/                            # Product Requirements Documents
│   │   └── README.md                    # PRD guidelines
│   └── validation/                      # Validation reports
│       └── README.md                    # Validation guidelines
├── src/                                 # Source code
│   ├── {{ MAIN_MODULE }}/               # Main application module
│   ├── tests/                           # Test files
│   │   ├── unit/                        # Unit tests
│   │   ├── integration/                 # Integration tests
│   │   └── performance/                 # Performance tests
│   └── requirements.txt                 # Python dependencies
├── infrastructure/
│   ├── terraform/
│   │   ├── modules/                     # Terraform modules
│   │   ├── environments/                # Environment-specific configs
│   │   └── main.tf                      # Main Terraform configuration
│   ├── kubernetes/
│   │   ├── base/                        # Base Kubernetes configs
│   │   └── overlays/                    # Environment overlays
│   └── docker/
│       ├── Dockerfile                   # Container definition
│       └── docker-compose.yml           # Local development setup
├── scripts/
│   ├── ai-agents/                       # AI agent implementations
│   │   ├── requirements.txt             # AI agent dependencies
│   │   ├── code-quality-agent.py        # Code quality analysis
│   │   ├── testing-agent.py             # Test automation
│   │   └── deployment-agent.py          # Deployment automation
│   ├── setup/                           # Setup and configuration scripts
│   │   ├── init-project.sh              # Project initialization
│   │   ├── setup-environments.sh        # Environment setup
│   │   └── install-dependencies.sh      # Dependency installation
│   └── deployment/                      # Deployment scripts
│       ├── deploy.sh                    # Main deployment script
│       └── rollback.sh                  # Rollback script
├── .ai_context/                         # AI context management
│   ├── framework_progress.md            # Framework progress tracking
│   ├── current_context.md               # Current working context
│   ├── team_patterns.md                 # Team development patterns
│   └── domain_context.md                # Project domain knowledge
├── .gitignore                           # Git ignore patterns
├── README.md                            # Project README
├── CLAUDE.md                            # Claude Code instructions
└── {{ PROJECT_NAME }}.md                # Project-specific documentation
```

## Configuration Files

### Environment Variables (.env.template)
```env
# Project Configuration
PROJECT_NAME={{ PROJECT_NAME }}
PROJECT_VERSION={{ PROJECT_VERSION | default: 1.0.0 }}
FRAMEWORK_VERSION=v3.7

# Cloud Provider Configuration
CLOUD_PROVIDER={{ CLOUD_PROVIDER | default: gcp }}
GCP_PROJECT_ID={{ GCP_PROJECT_ID }}
GCP_REGION={{ GCP_REGION | default: us-central1 }}

# AI Agent Configuration
AI_PROVIDER={{ AI_PROVIDER | default: openai }}
AI_MODEL={{ AI_MODEL | default: gpt-4 }}

# Development Environment
ENVIRONMENT={{ ENVIRONMENT | default: development }}
DEBUG={{ DEBUG | default: true }}

# Database Configuration
DATABASE_URL={{ DATABASE_URL }}
REDIS_URL={{ REDIS_URL }}

# Monitoring Configuration
MONITORING_ENABLED={{ MONITORING_ENABLED | default: true }}
LOG_LEVEL={{ LOG_LEVEL | default: INFO }}
```

## Setup Instructions

1. **Clone Structure**: Copy the directory structure to your new project
2. **Replace Variables**: Update all `{{ VARIABLE }}` placeholders with actual values
3. **Initialize Git**: Run `git init` and make initial commit
4. **Setup Environment**: Run `scripts/setup/init-project.sh`
5. **Configure CI/CD**: Setup GitHub Actions workflows
6. **Initialize AI Context**: Create initial AI context files

## Framework Integration

This structure aligns with the AI Agent Development Framework v3.7:
- **Init Phase**: Project structure and initial configuration
- **Development Phase**: Source code organization and testing setup
- **Deployment Phase**: Infrastructure and deployment automation
- **Operations Phase**: Monitoring and operational tooling

## Customization Options

- **Language-Specific**: Adapt structure for different programming languages
- **Cloud Platform**: Modify infrastructure based on target cloud provider
- **Team Size**: Adjust complexity based on team size and requirements
- **Domain**: Customize for specific domain requirements (web, mobile, data, ML)